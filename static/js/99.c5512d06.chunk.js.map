{"version":3,"file":"static/js/99.c5512d06.chunk.js","mappings":"+QACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAiF,mBAAjF,EAA0G,kBAA1G,EAAoI,oBAApI,EAAuK,2B,SCyDvK,MAnDA,WACE,OAA8BA,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOO,EAAP,KAAeC,EAAf,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIP,GAAW,GACXE,GAAS,GAHb,UAI8BM,EAAAA,EAAAA,IAAgBL,GAJ9C,OAIUM,EAJV,OAKIH,EAAUG,GALd,gDAOIP,EAAS,EAAD,IAPZ,yBASIF,GAAW,GATf,6EADc,uBAAC,WAAD,wBAadU,KACC,CAACP,KAGF,iBAAKQ,UAAWC,EAAhB,UACGb,IAAW,SAAC,KAAD,CAAWc,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KACzDd,IAAS,eAAGU,UAAWC,EAAd,uGAA4CX,MAC/C,OAANI,QAAM,IAANA,OAAA,EAAAA,EAAQW,KAAKC,QAAS,IACrB,cAAGN,UAAWC,EAAd,6MAEDP,IACC,eAAIM,UAAWC,EAAf,SACGP,EAAOW,KAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACf,gBAAIX,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXW,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,KAEP,iDAAUA,MACV,sDAAUC,OAXgBH,a,iMCpClCO,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,kCAELC,EAAW,mCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBJ,EAASK,IAAT,qCACSF,IAF3B,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBT,EAASK,IAAT,+BACGF,EADH,kBACqBM,IAFvC,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,yFACkBuB,EAASK,IAAT,gBACZ5B,EADY,oBACO0B,IAFzB,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,yFACkBuB,EAASK,IAAT,gBACZ5B,EADY,4BACe0B,IAFjC,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlC,GAA/B,yFACkBuB,EAASK,IAAT,gBACZ5B,EADY,4BACe0B,IAFjC,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,oE","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/cast.module.css?3847","pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"cast_wrapper__2NH-W\",\"list\":\"cast_list__BjE1s\",\"item\":\"cast_item__rFGCo\",\"img\":\"cast_img__ABSva\",\"error\":\"cast_error__C0Dec\",\"notifocation\":\"cast_notifocation__UQVcn\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { getMovieCredits } from '../../services/api';\nimport noImgActor from '../../img/noImgActor.jpg';\nimport s from './cast.module.css';\n\nfunction Cast() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setLoading(true);\n        setError(false);\n        const movieActors = await getMovieCredits(movieId);\n        setActors(movieActors);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div className={s.wrapper}>\n      {loading && <ThreeDots color=\"#ff6b08\" height={80} width={80} />}\n      {error && <p className={s.error}>Щось пішло не так : {error}</p>}\n      {actors?.cast.length < 1 && (\n        <p className={s.notifocation}>Поки що немає інформації про акторів</p>\n      )}\n      {actors && (\n        <ul className={s.list}>\n          {actors.cast.map(({ id, profile_path, name, character }) => (\n            <li className={s.item} key={id}>\n              <img\n                className={s.img}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                    : noImgActor\n                }\n                alt={name}\n              />\n              <p>Ім'я: {name}</p>\n              <p>Роль: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n});\nconst ROOT_KEY = 'f3ea85ad66a7076fbd3968a20cd79e45';\n\nexport async function getTrending() {\n  const { data } = await instance.get(\n    `trending/movie/day?api_key=${ROOT_KEY}`\n  );\n  return data.results;\n}\n\nexport async function getSearchMovies(query) {\n  const { data } = await instance.get(\n    `search/movie?api_key=${ROOT_KEY}&query=${query}`\n  );\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await instance.get(\n    `movie/${movieId}?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const { data } = await instance.get(\n    `movie/${movieId}/credits?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await instance.get(\n    `movie/${movieId}/reviews?api_key=${ROOT_KEY}`\n  );\n  return data;\n}\n"],"names":["useState","loading","setLoading","error","setError","movieId","useParams","actors","setActors","useEffect","getMovieCredits","movieActors","getCast","className","s","color","height","width","cast","length","map","id","profile_path","name","character","src","noImgActor","alt","instance","axios","baseURL","ROOT_KEY","getTrending","get","data","results","getSearchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}